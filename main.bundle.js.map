{"version":3,"sources":["/home/travis/build/vice-registry/vice-webui/src/$_gendir lazy","/home/travis/build/vice-registry/vice-webui/src/app/about.component.html","/home/travis/build/vice-registry/vice-webui/src/app/about.component.ts","/home/travis/build/vice-registry/vice-webui/src/app/app-routing.module.ts","/home/travis/build/vice-registry/vice-webui/src/app/app.component.css","/home/travis/build/vice-registry/vice-webui/src/app/app.component.html","/home/travis/build/vice-registry/vice-webui/src/app/app.component.ts","/home/travis/build/vice-registry/vice-webui/src/app/app.components.settings-dialog.html","/home/travis/build/vice-registry/vice-webui/src/app/app.module.ts","/home/travis/build/vice-registry/vice-webui/src/app/dashboard.component.css","/home/travis/build/vice-registry/vice-webui/src/app/dashboard.component.html","/home/travis/build/vice-registry/vice-webui/src/app/dashboard.component.ts","/home/travis/build/vice-registry/vice-webui/src/app/deployment.component.html","/home/travis/build/vice-registry/vice-webui/src/app/deployment.component.ts","/home/travis/build/vice-registry/vice-webui/src/app/deployment.service.ts","/home/travis/build/vice-registry/vice-webui/src/app/environment.component.html","/home/travis/build/vice-registry/vice-webui/src/app/environment.component.ts","/home/travis/build/vice-registry/vice-webui/src/app/environment.service.ts","/home/travis/build/vice-registry/vice-webui/src/app/image.component.html","/home/travis/build/vice-registry/vice-webui/src/app/image.component.ts","/home/travis/build/vice-registry/vice-webui/src/app/image.service.ts","/home/travis/build/vice-registry/vice-webui/src/app/login.component.css","/home/travis/build/vice-registry/vice-webui/src/app/login.component.html","/home/travis/build/vice-registry/vice-webui/src/app/login.component.ts","/home/travis/build/vice-registry/vice-webui/src/app/login.service.ts","/home/travis/build/vice-registry/vice-webui/src/app/runtimestats.component.css","/home/travis/build/vice-registry/vice-webui/src/app/runtimestats.component.html","/home/travis/build/vice-registry/vice-webui/src/app/runtimestats.component.ts","/home/travis/build/vice-registry/vice-webui/src/app/runtimestats.service.ts","/home/travis/build/vice-registry/vice-webui/src/app/settings.service.ts","/home/travis/build/vice-registry/vice-webui/src/app/user.service.ts","/home/travis/build/vice-registry/vice-webui/src/environments/environment.ts","/home/travis/build/vice-registry/vice-webui/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/vice-registry/vice-webui/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","module.exports = \"blabla about\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/vice-registry/vice-webui/src/app/about.component.html\n// module id = ../../../../../src/app/about.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'about',\n  templateUrl: './about.component.html',\n  //styleUrls: ['./app.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  ngOnInit(): void {\n\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/vice-registry/vice-webui/src/app/about.component.ts","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n \nimport { DashboardComponent }   from './dashboard.component';\nimport { ImageComponent }      from './image.component';\nimport { EnvironmentComponent }      from './environment.component';\nimport { DeploymentComponent }      from './deployment.component';\nimport { RuntimestatsComponent }      from './runtimestats.component';\nimport { LoginComponent } from './login.component';\nimport { AboutComponent } from './about.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'dashboard',  component: DashboardComponent },\n  { path: 'images',     component: ImageComponent },\n  { path: 'environments',     component: EnvironmentComponent },\n  { path: 'deployments',     component: DeploymentComponent },\n  { path: 'runtimestats',     component: RuntimestatsComponent },\n  { path: 'login',     component: LoginComponent },\n  { path: 'about',     component: AboutComponent }\n];\n \n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/vice-registry/vice-webui/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-spacer {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 1 auto;\\n          flex: 1 1 auto;\\n}\\n\\nmat-sidenav-container {\\n  /*margin: 0;*/\\n  width: 100%;\\n  /*height: 100%;*/\\n  min-height: 500px;\\n}\\n\\n.main-content{\\n  margin: 10px;\\n  min-height: 100%;\\n}\\n\\n#navbar {\\n  width: 240px;\\n}\\n\\n.mat-drawer-container, .mat-drawer{\\n  background-color: transparent;\\n}\\n\\n.active {\\n  font-style: italic;\\n  background-color: rgba(0,0,0,0.04);\\n}\\n\\n#main-content {\\n    max-width: 1600px;\\n    margin: 0 auto;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/vice-registry/vice-webui/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div id=\\\"main-content\\\">\\n  <mat-toolbar color=\\\"primary\\\">\\n    <span class=\\\"example-spacer\\\"></span>\\n    <span *ngIf=\\\"!apiurl\\\">\\n      <mat-chip-list>\\n        <mat-chip color=\\\"primary\\\" selected=\\\"true\\\" (click)=\\\"openSettings()\\\"><mat-icon>warning</mat-icon> Server configuration missing!</mat-chip>\\n      </mat-chip-list>\\n    </span>\\n    <span>\\n    <button mat-button (click)=\\\"openSettings()\\\"><mat-icon>settings</mat-icon> Settings</button>\\n  </span>\\n    <span *ngIf=\\\"user.id\\\">\\n    <button mat-button [matMenuTriggerFor]=\\\"menu\\\"><img gravatar [email]=\\\"user.email\\\" [size]=\\\"20\\\"> {{ user.fullname }}</button>\\n    <mat-menu #menu=\\\"matMenu\\\">\\n      <button mat-menu-item disabled>Settings</button>\\n      <button mat-menu-item (click)=\\\"logout()\\\">Logout</button>\\n    </mat-menu>\\n  </span>\\n    <span *ngIf=\\\"!user.id\\\">\\n    <a routerLink=\\\"/login\\\" mat-raised-button color=\\\"accent\\\"><mat-icon>account_circle</mat-icon> LOGIN or REGISTER</a>\\n  </span>\\n  </mat-toolbar>\\n\\n  <mat-sidenav-container>\\n    <mat-sidenav id=\\\"navbar\\\" disableClose mode=\\\"side\\\" opened=\\\"true\\\">\\n      <mat-card>\\n        <a routerLink=\\\"/\\\"><img src=\\\"assets/logo.png\\\" style=\\\"width:90%; margin: 10px;\\\"></a>\\n        <mat-nav-list>\\n          <a mat-list-item routerLinkActive=\\\"active\\\" routerLink=\\\"/dashboard\\\">\\n            <mat-icon mat-list-icon>home</mat-icon>\\n            <h4>Home</h4>\\n          </a>\\n          <a mat-list-item routerLinkActive=\\\"active\\\" routerLink=\\\"/images\\\">\\n            <mat-icon mat-list-icon>photo</mat-icon>\\n            <h4>Images</h4>\\n          </a>\\n          <a mat-list-item routerLinkActive=\\\"active\\\" routerLink=\\\"/environments\\\" *ngIf=\\\"user\\\">\\n            <mat-icon mat-list-icon>computer</mat-icon>\\n            <h4>Environments</h4>\\n          </a>\\n          <a mat-list-item routerLinkActive=\\\"active\\\" routerLink=\\\"/deployments\\\" *ngIf=\\\"user\\\">\\n            <mat-icon mat-list-icon>cloud</mat-icon>\\n            <h4>Deployments</h4>\\n          </a>\\n          <a mat-list-item routerLinkActive=\\\"active\\\" routerLink=\\\"/runtimestats\\\" *ngIf=\\\"user\\\">\\n            <mat-icon mat-list-icon>info_outline</mat-icon>\\n            <h4>Runtimestats</h4>\\n          </a>\\n        </mat-nav-list>\\n      </mat-card>\\n    </mat-sidenav>\\n\\n    <div class=\\\"main-content\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </mat-sidenav-container>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/vice-registry/vice-webui/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n\nimport { User } from './api/model/User';\nimport { UserService } from './user.service';\nimport { SettingsService } from './settings.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n\n  user: User;\n  apiurl: string;\n\n  constructor(private userService: UserService, private settingsService: SettingsService, private router: Router, public dialog: MatDialog) {\n    userService.userchange$.subscribe(\n      user => {\n        this.user = user;\n      });\n      settingsService.apiurl$.subscribe(\n        apiurl => {\n          this.apiurl = apiurl;\n        });      \n  }\n\n  ngOnInit(): void {\n    this.user = this.userService.remember();\n    this.apiurl = this.settingsService.getApiurl();\n  }\n\n  logout(): void {\n    this.user = {\n      username: \"\",\n      password: \"\",\n      email: \"\",\n      fullname: \"\"\n    };\n    this.userService.forget();\n    this.router.navigate(['/']);\n  }\n\n  openSettings(): void {\n    let url = \"http://localhost:8080/v1\"; // default URL\n    if(this.settingsService.getApiurl() != null){\n      url = this.settingsService.getApiurl();\n    }\n    let dialogRef = this.dialog.open(SettingsDialog, {\n      width: '350px',\n      data: { apiurl: url }\n    });\n\n    dialogRef.afterClosed().subscribe(apiurl => {\n      if(apiurl)\n        this.settingsService.changeApiurl(apiurl);\n    });\n  }\n\n}\n\n\n@Component({\n  selector: 'settings-dialog',\n  templateUrl: 'app.components.settings-dialog.html',\n})\nexport class SettingsDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<SettingsDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  /*onNoClick(): void {\n    this.dialogRef.close();\n  }*/\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/vice-registry/vice-webui/src/app/app.component.ts","module.exports = \"<h1 mat-dialog-title>Settings</h1>\\n<div mat-dialog-content>\\n  <mat-form-field>\\n    <input matInput tabindex=\\\"1\\\" placeholder=\\\"Server URL\\\" [(ngModel)]=\\\"data.apiurl\\\" required>\\n  </mat-form-field>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button [mat-dialog-close]=\\\"data.apiurl\\\" tabindex=\\\"2\\\">Ok</button>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/vice-registry/vice-webui/src/app/app.components.settings-dialog.html\n// module id = ../../../../../src/app/app.components.settings-dialog.html\n// module chunks = main","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatStepperModule,\n} from '@angular/material';\nimport { HttpModule } from '@angular/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { GravatarModule } from 'ng2-gravatar-directive';\n\nimport { AppComponent, SettingsDialog } from './app.component';\nimport { ImageComponent } from './image.component';\nimport { EnvironmentComponent } from './environment.component';\nimport { RuntimestatsComponent } from './runtimestats.component';\nimport { DeploymentComponent } from './deployment.component';\nimport { DashboardComponent } from './dashboard.component';\nimport { LoginComponent } from './login.component';\nimport { AboutComponent } from './about.component';\n\nimport { EnvironmentService } from './environment.service';\nimport { ImageService } from './image.service';\nimport { DeploymentService } from './deployment.service';\nimport { RuntimestatsService } from './runtimestats.service';\nimport { LoginService } from './login.service';\nimport { UserService } from './user.service';\nimport { SettingsService } from './settings.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SettingsDialog,\n    DashboardComponent,\n    ImageComponent,\n    EnvironmentComponent,\n    DeploymentComponent,\n    RuntimestatsComponent,\n    LoginComponent,\n    AboutComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    HttpModule,\n    AppRoutingModule,\n    GravatarModule,\n    BrowserAnimationsModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n  ],\n  providers: [\n    ImageService,\n    EnvironmentService,\n    DeploymentService,\n    RuntimestatsService,\n    LoginService,\n    UserService,\n    SettingsService\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [SettingsDialog]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/vice-registry/vice-webui/src/app/app.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"mat-card {\\n    /*height: 90%;*/\\n    width: 100%;\\n}\\n\\nmat-card-content{\\n    height: 60px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/vice-registry/vice-webui/src/app/dashboard.component.css\n// module id = ../../../../../src/app/dashboard.component.css\n// module chunks = main","module.exports = \"<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"240px\\\">\\n\\n    <mat-grid-tile colspan=\\\"2\\\">\\n        <!--\\n        <mat-grid-tile-header>\\n            <h1>Welcome to ViCE Registry</h1>\\n        </mat-grid-tile-header>\\n        <p>\\n            The image registry that allows to share images of Virtual environments across platforms.\\n            <br/> To start right away, please choose one of the following next steps.\\n        </p>\\n        <mat-grid-tile-footer>\\n            <button mat-button>EXPLORE IMAGES</button>\\n        </mat-grid-tile-footer>\\n        -->\\n\\n        <mat-card>\\n            <mat-card-header class=\\\"mat-primary\\\">\\n                <mat-card-title>\\n                    <h1>Welcome to VICE Registry</h1>\\n                </mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n                <p>\\n                    The image registry that allows to share images of Virtual environments across platforms.\\n                    <br/> To start right away, please choose one of the following next steps.\\n                </p>\\n            </mat-card-content>            \\n        </mat-card>\\n\\n    </mat-grid-tile>\\n\\n\\n    <mat-grid-tile>\\n        <mat-card>\\n            <mat-card-header>\\n                <mat-card-title>\\n                    <h1>Explore Images</h1>\\n                </mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n                <p>\\n                    Explore the images stored in the ViCE registry. For public images, no registration is required to browse and explore available\\n                    images.\\n                </p>\\n            </mat-card-content>\\n            <mat-card-actions>\\n                <a routerLink=\\\"/images\\\" mat-raised-button color=\\\"primary\\\">EXPLORE IMAGES</a>\\n            </mat-card-actions>\\n        </mat-card>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n        <mat-card>\\n            <mat-card-header>\\n                <mat-card-title>\\n                    <h1>Register</h1>\\n                </mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n                <p>\\n                    To use the full feature set of the ViCE registry, please register an account. Registered users can deploy and import images.\\n                </p>\\n            </mat-card-content>\\n            <mat-card-actions>\\n                <a routerLink=\\\"/login\\\" mat-raised-button color=\\\"primary\\\">REGISTER NOW</a>\\n            </mat-card-actions>\\n        </mat-card>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n        <mat-card>\\n            <mat-card-header>\\n                <mat-card-title>\\n                    <h1>About ViCE</h1>\\n                </mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n                <p>\\n                    ViCE is a national project with universities in the federal state of Baden-Württemberg, Germany, in the field of research\\n                    data management.\\n                </p>\\n            </mat-card-content>\\n            <mat-card-actions>\\n                <a routerLink=\\\"/about\\\" mat-raised-button color=\\\"primary\\\">READ MORE</a>\\n            </mat-card-actions>\\n        </mat-card>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n        <mat-card>\\n            <mat-card-header>\\n                <mat-card-title>\\n                    <h1>Contact & Feedback</h1>\\n                </mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n                <p>\\n                    For questions, comments and feedback, please contact us. We're happy to learn about your experiences with the ViCE registry.\\n                </p>\\n            </mat-card-content>\\n            <mat-card-actions>\\n                <a routerLink=\\\"/about\\\" mat-raised-button color=\\\"primary\\\">CONTACT INFORMATION</a>\\n            </mat-card-actions>\\n        </mat-card>\\n    </mat-grid-tile>\\n</mat-grid-list>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/vice-registry/vice-webui/src/app/dashboard.component.html\n// module id = ../../../../../src/app/dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'dashboard',\n  styleUrls: ['./dashboard.component.css'],\n  templateUrl: './dashboard.component.html',\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/vice-registry/vice-webui/src/app/dashboard.component.ts","module.exports = \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title *ngIf=!deployment.id>\\n            <h3>Create Deployment</h3>\\n        </mat-card-title>\\n        <mat-card-title *ngIf=deployment.id>\\n            <h3>Show Deployment {{deployment.title}} (ID {{deployment.id}})</h3>\\n        </mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n        <form #createImageForm=\\\"ngForm\\\">\\n            <div class=\\\"formcard\\\">\\n                <div>\\n                    <mat-form-field>\\n                        <input matInput name=\\\"title\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"deployment.title\\\">\\n                    </mat-form-field>\\n                    \\n                    <mat-form-field>\\n                        <mat-select name=\\\"imageid\\\" placeholder=\\\"Image\\\" [(ngModel)]=\\\"deployment.imageid\\\" [compareWith]=\\\"compareImages\\\">\\n                            <mat-option *ngFor=\\\"let image of images\\\" [value]=\\\"image.id\\\">\\n                                {{ image.title }}\\n                            </mat-option>                            \\n                        </mat-select>\\n                    </mat-form-field>                    \\n\\n                    <mat-form-field>\\n                        <mat-select name=\\\"environmentId\\\" placeholder=\\\"Target Environment\\\" [(ngModel)]=\\\"deployment.environmentId\\\" [compareWith]=\\\"compareEnvironments\\\">\\n                            <mat-option *ngFor=\\\"let environment of environments\\\" [value]=\\\"environment.id\\\">\\n                                {{ environment.title }}\\n                            </mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n\\n                <button mat-raised-button (click)=\\\"clear()\\\" *ngIf=deployment.id>CLEAR</button>\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"store()\\\">SUBMIT</button>\\n            </div>\\n        </form>\\n    </mat-card-content>\\n</mat-card>\\n\\n<mat-card>\\n    <mat-table #table [dataSource]=\\\"deploymentDataSource\\\">\\n\\n        <ng-container matColumnDef=\\\"title\\\">\\n            <mat-header-cell *matHeaderCellDef> Title </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.title}} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"imageid\\\">\\n            <mat-header-cell *matHeaderCellDef> Image ID </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.imageid}} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"environmentId\\\">\\n            <mat-header-cell *matHeaderCellDef> Environment ID </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.environmentId}} </mat-cell>\\n        </ng-container>        \\n\\n        <ng-container matColumnDef=\\\"environmentReference\\\">\\n            <mat-header-cell *matHeaderCellDef> Reference ID </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.environmentReference}} </mat-cell>\\n        </ng-container>        \\n\\n        <ng-container matColumnDef=\\\"actions\\\">\\n            <mat-header-cell *matHeaderCellDef> </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\">\\n                <button mat-icon-button color=\\\"primary\\\" (click)=\\\"edit(element)\\\">\\n                        <mat-icon aria-label=\\\"edit\\\">mode_edit</mat-icon>\\n                </button>\\n                <button mat-icon-button color=\\\"warn\\\" (click)=\\\"delete(element)\\\">\\n                      <mat-icon aria-label=\\\"delete\\\">delete_forever</mat-icon>\\n                </button>\\n            </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n\\n    </mat-table>\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/vice-registry/vice-webui/src/app/deployment.component.html\n// module id = ../../../../../src/app/deployment.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { Injectable } from '@angular/core';\nimport { Deployment } from './api/model/Deployment';\nimport { DeploymentService } from './deployment.service';\nimport { Environment } from './api/model/Environment';\nimport { EnvironmentService } from './environment.service';\nimport { Image } from './api/model/Image';\nimport { ImageService } from './image.service';\nimport 'rxjs/add/operator/toPromise';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/merge';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Component({\n    selector: 'deployment-list',\n    templateUrl: './deployment.component.html',\n})\n\nexport class DeploymentComponent implements OnInit {\n\n    displayedColumns = ['title', 'imageid', 'environmentId', 'environmentReference', 'actions'];\n    deploymentDataSource;\n    deployment: Deployment;\n    environments: Environment[];    \n    images: Image[];\n\n    constructor(private deploymentService: DeploymentService, private imageService: ImageService, private environmentService: EnvironmentService, public snackBar: MatSnackBar) { \n        this.clear();\n    }\n\n    ngOnInit(): void {\n        this.deploymentDataSource = new DeploymentDataSource(this.deploymentService, this.snackBar);\n        this.environmentService.getList().then(res => {\n            this.environments = res;\n        }, error => {\n            {\n                this.snackBar.open(\"Server Error: \" + error, \"OK\");\n            }\n        });\n        this.imageService.getList().then(res => {\n            this.images = res;\n        }, error => {\n            {\n                this.snackBar.open(\"Server Error: \" + error, \"OK\");\n            }\n        });                   \n    }\n\n    store(): void {\n        this.deploymentService.store(this.deployment).\n            then(environment => {\n                this.snackBar.open(\"Image stored successfully\", \"OK\", { duration: 500 });\n                this.deploymentDataSource = new DeploymentDataSource(this.deploymentService, this.snackBar);\n                this.clear();                \n            },\n            error => {\n                {\n                    this.snackBar.open(\"Server Error: \" + error, \"OK\");\n                }\n            });\n    }\n\n    delete(deployment: Deployment): void {\n        this.deploymentService.delete(deployment).then(result => {\n            this.snackBar.open(\"Image deleted successfully\", \"OK\", { duration: 500 });\n            this.deploymentDataSource = new DeploymentDataSource(this.deploymentService, this.snackBar);\n        },\n        error => {\n            {\n                this.snackBar.open(\"Server Error: \" + error, \"OK\");\n            }\n        });\n    }\n\n    clear(): void{\n        this.deployment = this.deploymentService.getStub();\n    }\n    \n    edit(deployment: Deployment): void {\n        this.deployment = deployment;\n    }      \n\n    compareEnvironments(env1: Environment, env2: Environment) {\n        return env1 && env2 && env1.id === env2.id;\n    }\n\n    compareImages(img1: Image, img2: Image) {\n        console.info(img1, img2);\n        return img1 && img2 && img1.id === img2.id;\n    }\n\n}\n\nexport class DeploymentDataSource extends DataSource<Deployment> {\n\n    constructor(private deploymentService: DeploymentService, public snackBar: MatSnackBar) {\n        super();\n    }\n\n    subject: BehaviorSubject<Deployment[]> = new BehaviorSubject<Deployment[]>([]);\n\n    connect(): Observable<Deployment[]> {\n        if (!this.subject.isStopped)\n            this.deploymentService.getList().then(res => {\n                this.subject.next(res)\n            }, error => {\n                {\n                    this.snackBar.open(\"Server Error: \" + error, \"OK\");\n                }\n            });\n        return Observable.merge(this.subject);\n    }\n\n    disconnect() {\n        this.subject.complete();\n        this.subject.observers = [];\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/vice-registry/vice-webui/src/app/deployment.component.ts","import { Injectable }    from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { Deployment } from './api/model/Deployment';\nimport { SettingsService } from './settings.service';\nimport { UserService } from './user.service';\n\nconst headerDict = {\n  'Content-Type': 'application/json',\n  'Accept': 'application/json',\n  'Access-Control-Allow-Headers': 'Content-Type',\n}\n\nconst headerObj = {                                                                                                                                                                                 \n  headers: new Headers(headerDict), \n};\n\n@Injectable()\nexport class DeploymentService {\n    \n    constructor(private http: Http, private settingsService: SettingsService, private userService: UserService) { }\n    \n    getList(): Promise<Deployment[]> {\n        let headers = new Headers({\n            'Accept': 'application/json',\n            'Authorization': 'Basic ' + this.userService.getBasicAuth()\n        });        \n        return this.http.get(this.settingsService.getApiurl()+'/deployments', {headers: headers})\n                .toPromise()\n                .then((response) => {\n                    return response.json() as Deployment[]\n                }).catch(this.handleError);\n    }\n    \n    \n    getStub(): Deployment {\n        var deployment: Deployment = {\n            id: ''\n        };\n        return deployment;\n    }\n\n    store(deployment: Deployment): Promise<Deployment> {\n        let headers = new Headers({\n            'Accept': 'application/json',\n            'Authorization': 'Basic ' + this.userService.getBasicAuth(),\n            'Content-type': 'application/json'\n        });\n        if (deployment.id) {\n            console.error(\"Option not allowed!\");\n            // update\n            /*return this.http.put(this.settingsService.getApiurl() + '/deployments', JSON.stringify(deployment), { headers: headers })\n                .toPromise()\n                .then((response) => {\n                    return response.json() as Deployment\n                }).catch(this.handleError);*/\n        } else {\n            // create\n            return this.http.post(this.settingsService.getApiurl() + '/deploy', JSON.stringify(deployment), { headers: headers })\n                .toPromise()\n                .then((response) => {\n                    return response.json() as Deployment\n                }).catch(this.handleError);\n        }\n    }\n\n    delete(deployment: Deployment): Promise<any> {\n        let headers = new Headers({\n            'Accept': 'application/json',\n            'Authorization': 'Basic ' + this.userService.getBasicAuth(),\n        });\n\n        return this.http.delete(this.settingsService.getApiurl() + '/deployment/' + deployment.id, { headers: headers })\n            .toPromise()\n            .then((response) => {\n                return response\n            }).catch(this.handleError);\n\n    }    \n\n    private handleError(error: any): Promise<any> {\n        return Promise.reject(error.message || error);\n    }\n  \n}\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/vice-registry/vice-webui/src/app/deployment.service.ts","module.exports = \"<mat-card>\\n    Suche hier\\n</mat-card>\\n\\n<mat-card>\\n    <mat-card-header>\\n        <mat-card-title *ngIf=!environment.id>\\n            <h3>Create Environment</h3>\\n        </mat-card-title>\\n        <mat-card-title *ngIf=environment.id>\\n                <h3>Update Environment {{environment.title}} (ID {{environment.id}})</h3>\\n            </mat-card-title>        \\n    </mat-card-header>\\n    <mat-card-content>\\n        <form #createEnvironmentForm=\\\"ngForm\\\">\\n            <div class=\\\"formcard\\\">\\n                <div>\\n                    <mat-form-field>\\n                        <input matInput name=\\\"title\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"environment.title\\\">\\n                    </mat-form-field>\\n                    <mat-form-field>\\n                        <mat-select name=\\\"management\\\" placeholder=\\\"Management Layer\\\" [(ngModel)]=\\\"environment.managementlayer.software\\\">\\n                            <mat-option value=\\\"openstack\\\">OpenStack</mat-option>\\n                            <mat-option value=\\\"bwlehrpool\\\">bwLehrpool</mat-option>\\n                            <mat-option value=\\\"docker\\\">Docker</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                    <mat-form-field>\\n                        <mat-select name=\\\"runtime\\\" placeholder=\\\"Runtime Technology\\\" [(ngModel)]=\\\"environment.runtimetechnology.software\\\">\\n                            <mat-option value=\\\"kvm\\\">KVM</mat-option>\\n                            <mat-option value=\\\"esxi\\\">ESXi</mat-option>\\n                            <mat-option value=\\\"docker\\\">Docker</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n\\n                <div>\\n                    <mat-form-field>\\n                        <input matInput name=\\\"location\\\" placeholder=\\\"Location\\\" [(ngModel)]=\\\"environment.credentials.location\\\">\\n                    </mat-form-field>\\n                    <mat-form-field>\\n                        <input matInput name=\\\"username\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"environment.credentials.username\\\">\\n                    </mat-form-field>\\n                    <mat-form-field>\\n                        <input matInput name=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"environment.credentials.password\\\">\\n                    </mat-form-field>\\n                </div>\\n\\n                <div *ngIf=\\\"environment.managementlayer.software=='openstack'\\\">\\n                    <mat-form-field>\\n                        <input matInput name=\\\"tenant\\\" placeholder=\\\"Tenant\\\" [(ngModel)]=\\\"environment.credentials.specifics.tenant\\\">\\n                    </mat-form-field>\\n                    <mat-form-field>\\n                        <input matInput name=\\\"region\\\" placeholder=\\\"Region\\\" value=\\\"RegionOne\\\" [(ngModel)]=\\\"environment.credentials.specifics.region\\\">\\n                    </mat-form-field>\\n                    <mat-form-field>\\n                        <input matInput name=\\\"domain\\\" placeholder=\\\"Domain\\\" value=\\\"Default\\\" [(ngModel)]=\\\"environment.credentials.specifics.domain\\\">\\n                    </mat-form-field>\\n                </div>\\n\\n                <button mat-raised-button (click)=\\\"clear()\\\" *ngIf=environment.id>CLEAR</button>\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"store()\\\">SUBMIT</button>\\n            </div>\\n        </form>\\n    </mat-card-content>\\n</mat-card>\\n\\n<mat-card>\\n    <mat-table #table [dataSource]=\\\"environmentsDataSource\\\">\\n        <ng-container matColumnDef=\\\"title\\\">\\n            <mat-header-cell *matHeaderCellDef> Title </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.title}} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"managementlayer\\\">\\n            <mat-header-cell *matHeaderCellDef> Management Layer </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.managementlayer.software}} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"runtimetechnology\\\">\\n            <mat-header-cell *matHeaderCellDef> Runtime Technology </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.runtimetechnology.software}} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"location\\\">\\n            <mat-header-cell *matHeaderCellDef> Location </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.credentials.location}} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"username\\\">\\n            <mat-header-cell *matHeaderCellDef> Username </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.credentials.username}} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"actions\\\">\\n            <mat-header-cell *matHeaderCellDef> </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\">\\n                <button mat-icon-button color=\\\"primary\\\" (click)=\\\"edit(element)\\\">\\n                    <mat-icon aria-label=\\\"edit\\\">mode_edit</mat-icon>\\n                </button>                \\n                <button mat-icon-button color=\\\"warn\\\" (click)=\\\"delete(element)\\\">\\n                  <mat-icon aria-label=\\\"delete\\\">delete_forever</mat-icon>\\n                </button>\\n            </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    </mat-table>\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/vice-registry/vice-webui/src/app/environment.component.html\n// module id = ../../../../../src/app/environment.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { Injectable } from '@angular/core';\nimport { EnvironmentService } from './environment.service';\nimport 'rxjs/add/operator/toPromise';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/merge';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Router } from '@angular/router';\n\nimport { Environment } from './api/model/Environment';\n\n@Component({\n    selector: 'environment-list',\n    templateUrl: './environment.component.html',\n})\n\nexport class EnvironmentComponent implements OnInit {\n\n    displayedColumns = ['title', 'managementlayer', 'runtimetechnology', 'location', 'username', 'actions'];\n    environmentsDataSource;\n    environment: Environment;\n\n    constructor(private environmentService: EnvironmentService, public snackBar: MatSnackBar, private router: Router) {\n        this.clear();\n    }\n\n    ngOnInit(): void {\n        this.environmentsDataSource = new EnvironmentDataSource(this.environmentService, this.snackBar);\n    }\n\n    store(): void {\n        this.environmentService.store(this.environment).\n            then(environment => {\n                this.snackBar.open(\"Environment stored successfully\", \"OK\", { duration: 500 });\n                this.environmentsDataSource = new EnvironmentDataSource(this.environmentService, this.snackBar);\n                this.clear();                \n            },\n            error => {\n                {\n                    this.snackBar.open(\"Server Error: \" + error, \"OK\");\n                }\n            });\n    }\n\n    delete(environment: Environment): void {\n        this.environmentService.delete(environment).then(result => {\n            this.snackBar.open(\"Environment deleted successfully\", \"OK\", { duration: 500 });\n            this.environmentsDataSource = new EnvironmentDataSource(this.environmentService, this.snackBar);\n        },\n        error => {\n            {\n                this.snackBar.open(\"Server Error: \" + error, \"OK\");\n            }\n        });\n    }\n\n    clear(): void{\n        this.environment = this.environmentService.getStub();\n    }\n    \n    edit(environment: Environment): void {\n        this.environment = environment;\n    }    \n}\n\nexport class EnvironmentDataSource extends DataSource<Environment> {\n\n    constructor(private environmentService: EnvironmentService, public snackBar: MatSnackBar) {\n        super();\n    }\n\n    subject: BehaviorSubject<Environment[]> = new BehaviorSubject<Environment[]>([]);\n\n    public connect(): Observable<Environment[]> {\n        if (!this.subject.isStopped)\n            this.environmentService.getList().then(res => {\n                this.subject.next(res)\n            }, error => {\n                {\n                    this.snackBar.open(\"Server Error: \" + error, \"OK\");\n                }\n            });\n        return Observable.merge(this.subject);\n    }\n\n    disconnect() {\n        this.subject.complete();\n        this.subject.observers = [];\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/vice-registry/vice-webui/src/app/environment.component.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\n\nimport { SettingsService } from './settings.service';\nimport { UserService } from './user.service';\n\nimport { Environment } from './api/model/Environment';\nimport { Credentials } from './api/model/Credentials';\nimport { RuntimeTechnology } from './api/model/RuntimeTechnology';\nimport { ManagementLayer } from './api/model/ManagementLayer';\n\n\nconst headerDict = {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n    'Access-Control-Allow-Headers': 'Content-Type',\n}\n\nconst headerObj = {\n    headers: new Headers(headerDict),\n};\n\n@Injectable()\nexport class EnvironmentService {\n\n    constructor(private http: Http, private settingsService: SettingsService, private userService: UserService) { }\n\n    getList(): Promise<Environment[]> {\n        let headers = new Headers({\n            'Accept': 'application/json',\n            'Authorization': 'Basic ' + this.userService.getBasicAuth()\n        });\n        return this.http.get(this.settingsService.getApiurl() + '/environments', { headers: headers })\n            .toPromise()\n            .then((response) => {\n                return response.json() as Environment[]\n            }).catch(this.handleError);\n    }\n\n    getStub(): Environment {\n        var credentials: Credentials = {\n            specifics: {}\n        };\n        var runtimetechnology: RuntimeTechnology = {\n        };\n        var managementlayer: ManagementLayer = {\n        };\n        var environment: Environment = {\n            id: '',\n            userid: '',\n            credentials: credentials,\n            runtimetechnology: runtimetechnology,\n            managementlayer: managementlayer\n        };\n        return environment;\n    }\n\n    store(environment: Environment): Promise<Environment> {\n        let headers = new Headers({\n            'Accept': 'application/json',\n            'Authorization': 'Basic ' + this.userService.getBasicAuth(),\n            'Content-type': 'application/json'\n        });\n        if (environment.id) {\n            // update\n            return this.http.put(this.settingsService.getApiurl() + '/environments', JSON.stringify(environment), { headers: headers })\n                .toPromise()\n                .then((response) => {\n                    return response.json() as Environment\n                }).catch(this.handleError);\n        } else {\n            // create\n            return this.http.post(this.settingsService.getApiurl() + '/environments', JSON.stringify(environment), { headers: headers })\n                .toPromise()\n                .then((response) => {\n                    return response.json() as Environment\n                }).catch(this.handleError);\n        }\n    }\n\n    delete(environment: Environment): Promise<any> {\n        let headers = new Headers({\n            'Accept': 'application/json',\n            'Authorization': 'Basic ' + this.userService.getBasicAuth(),\n        });\n\n        return this.http.delete(this.settingsService.getApiurl() + '/environment/' + environment.id, { headers: headers })\n            .toPromise()\n            .then((response) => {\n                return response\n            }).catch(this.handleError);\n\n    }    \n\n    private handleError(error: any): Promise<any> {\n        return Promise.reject(error.message || error);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/vice-registry/vice-webui/src/app/environment.service.ts","module.exports = \"<mat-card>\\n    Suche hier\\n</mat-card>\\n\\n<mat-card>\\n    <mat-card-header>\\n        <mat-card-title *ngIf=!image.id>\\n            <h3>Create Image</h3>\\n        </mat-card-title>\\n        <mat-card-title *ngIf=image.id>\\n            <h3>Update Image {{image.title}} (ID {{image.id}})</h3>\\n        </mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n        <form #createImageForm=\\\"ngForm\\\">\\n            <div class=\\\"formcard\\\">\\n                <div>\\n                    <mat-form-field>\\n                        <input matInput name=\\\"title\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"image.title\\\">\\n                    </mat-form-field>\\n                    <mat-form-field>\\n                        <mat-select name=\\\"originEnvironment\\\" placeholder=\\\"Origin Environment\\\" [(ngModel)]=\\\"image.originEnvironment\\\" [compareWith]=\\\"compareEnvironments\\\">\\n                            <mat-option *ngFor=\\\"let environment of environments\\\" [value]=\\\"environment\\\">\\n                                {{ environment.title }}\\n                            </mat-option>                            \\n                        </mat-select>\\n                    </mat-form-field>\\n                    <mat-form-field>\\n                            <input matInput name=\\\"environmentReference\\\" placeholder=\\\"Environment Reference\\\" [(ngModel)]=\\\"image.environmentReference\\\">\\n                    </mat-form-field>                    \\n                </div>\\n\\n                <button mat-raised-button (click)=\\\"clear()\\\" *ngIf=image.id>CLEAR</button>\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"store()\\\">SUBMIT</button>\\n            </div>\\n        </form>\\n    </mat-card-content>\\n</mat-card>\\n\\n<mat-card>\\n    <mat-table #table [dataSource]=\\\"imagesDataSource\\\">\\n\\n        <ng-container matColumnDef=\\\"title\\\">\\n            <mat-header-cell *matHeaderCellDef> Title </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.title}} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"environmentReference\\\">\\n            <mat-header-cell *matHeaderCellDef> Reference ID </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.environmentReference}} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"origin\\\">\\n            <mat-header-cell *matHeaderCellDef> Origin </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.originEnvironment.title}} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"managementlayer\\\">\\n            <mat-header-cell *matHeaderCellDef> Management Layer </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.originEnvironment.managementlayer.software}} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"runtimetechnology\\\">\\n            <mat-header-cell *matHeaderCellDef> Runtime Technology </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.originEnvironment.runtimetechnology.software}} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"imported\\\">\\n            <mat-header-cell *matHeaderCellDef> imported </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\">\\n                <mat-checkbox checked=\\\"{{element.imported}}\\\" disabled=\\\"disabled\\\"></mat-checkbox>\\n            </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"actions\\\">\\n            <mat-header-cell *matHeaderCellDef> </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\">\\n                <button mat-icon-button color=\\\"primary\\\" (click)=\\\"upload(element)\\\">\\n                        <mat-icon aria-label=\\\"upload\\\">backup</mat-icon>\\n                    </button>\\n                <button mat-icon-button color=\\\"primary\\\" (click)=\\\"edit(element)\\\">\\n                        <mat-icon aria-label=\\\"edit\\\">mode_edit</mat-icon>\\n                </button>\\n                <button mat-icon-button color=\\\"warn\\\" (click)=\\\"delete(element)\\\">\\n                      <mat-icon aria-label=\\\"delete\\\">delete_forever</mat-icon>\\n                </button>\\n            </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n\\n    </mat-table>\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/vice-registry/vice-webui/src/app/image.component.html\n// module id = ../../../../../src/app/image.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {MatSnackBar} from '@angular/material';\nimport { Injectable } from '@angular/core';\nimport { Image } from './api/model/Image';\nimport { Environment } from './api/model/Environment';\nimport { EnvironmentService } from './environment.service';\nimport { ImageService } from './image.service';\nimport 'rxjs/add/operator/toPromise';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/merge';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Component({\n    selector: 'image-list',\n    templateUrl: './image.component.html',\n})\n\nexport class ImageComponent implements OnInit {\n\n    displayedColumns = ['title', 'environmentReference', 'origin', 'managementlayer', 'runtimetechnology', 'imported', 'actions'];\n    imagesDataSource;\n    image: Image;\n    environments: Environment[];\n\n    constructor(private imageService: ImageService, public snackBar: MatSnackBar, private environmentService: EnvironmentService) {\n        this.clear();\n    }\n\n    ngOnInit(): void {\n        this.imagesDataSource = new ImagesDataSource(this.imageService, this.snackBar);\n        this.environmentService.getList().then(res => {\n            this.environments = res;\n        }, error => {\n            {\n                this.snackBar.open(\"Server Error: \" + error, \"OK\");\n            }\n        });        \n        \n    }\n\n    store(): void {\n        this.imageService.store(this.image).\n            then(image => {\n                this.snackBar.open(\"Image stored successfully\", \"OK\", { duration: 500 });\n                this.imagesDataSource = new ImagesDataSource(this.imageService, this.snackBar);\n                this.clear();                \n            },\n            error => {\n                {\n                    this.snackBar.open(\"Server Error: \" + error, \"OK\");\n                }\n            });\n    }\n\n    delete(image: Image): void {\n        this.imageService.delete(image).then(result => {\n            this.snackBar.open(\"Image deleted successfully\", \"OK\", { duration: 500 });\n            this.imagesDataSource = new ImagesDataSource(this.imageService, this.snackBar);\n        },\n        error => {\n            {\n                this.snackBar.open(\"Server Error: \" + error, \"OK\");\n            }\n        });\n    }\n\n    clear(): void{\n        this.image = this.imageService.getStub();\n    }\n    \n    edit(image: Image): void {\n        this.image = image;\n    }      \n\n    compareEnvironments(env1: Environment, env2: Environment) {\n        return env1 && env2 && env1.id === env2.id;\n    }\n\n}\n\nexport class ImagesDataSource extends DataSource<Image> {\n\n    constructor(private imageService: ImageService,  public snackBar: MatSnackBar) {\n        super();\n    }\n\n    subject: BehaviorSubject<Image[]> = new BehaviorSubject<Image[]>([]);\n\n    connect(): Observable<Image[]> {\n        if (!this.subject.isStopped)\n            this.imageService.getList().then(res => {\n                this.subject.next(res)\n            }, error => {\n                {\n                    this.snackBar.open(\"Server Error: \" + error, \"OK\");\n                }\n            });\n        return Observable.merge(this.subject);\n    }\n\n    disconnect() {\n        this.subject.complete();\n        this.subject.observers = [];\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/vice-registry/vice-webui/src/app/image.component.ts","import { Injectable }    from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { Image } from './api/model/Image';\nimport { Environment } from './api/model/Environment';\nimport { Credentials } from './api/model/Credentials';\nimport { RuntimeTechnology } from './api/model/RuntimeTechnology';\nimport { ManagementLayer } from './api/model/ManagementLayer';\nimport { SettingsService } from './settings.service';\nimport { UserService } from './user.service';\n\nconst headerDict = {\n  'Content-Type': 'application/json',\n  'Accept': 'application/json',\n  'Access-Control-Allow-Headers': 'Content-Type',\n}\n\nconst headerObj = {                                                                                                                                                                                 \n  headers: new Headers(headerDict), \n};\n\n@Injectable()\nexport class ImageService {\n\n    constructor(private http: Http, private settingsService: SettingsService, private userService: UserService) { }\n    \n    getList(): Promise<Image[]> {\n        let headers = new Headers({\n            'Accept': 'application/json',\n            'Authorization': 'Basic ' + this.userService.getBasicAuth()\n        });\n        return this.http.get(this.settingsService.getApiurl()+'/images', {headers: headers})\n                .toPromise()\n                .then((response) => {\n                    return response.json() as Image[]\n                }).catch(this.handleError);\n    }\n    \n    getStub(): Image {\n        var credentials: Credentials = {\n            specifics: {}\n        };\n        var runtimetechnology: RuntimeTechnology = {\n        };\n        var managementlayer: ManagementLayer = {\n        };\n        var environment: Environment = {\n            id: '',\n            userid: '',\n            credentials: credentials,\n            runtimetechnology: runtimetechnology,\n            managementlayer: managementlayer\n        };\n        var image: Image = {\n            id: '',\n            userid: ''\n        };\n        return image;\n    }\n\n    store(image: Image): Promise<Image> {\n        let headers = new Headers({\n            'Accept': 'application/json',\n            'Authorization': 'Basic ' + this.userService.getBasicAuth(),\n            'Content-type': 'application/json'\n        });\n        if (image.id) {\n            // update\n            return this.http.put(this.settingsService.getApiurl() + '/images', JSON.stringify(image), { headers: headers })\n                .toPromise()\n                .then((response) => {\n                    return response.json() as Image\n                }).catch(this.handleError);\n        } else {\n            // create\n            return this.http.post(this.settingsService.getApiurl() + '/images', JSON.stringify(image), { headers: headers })\n                .toPromise()\n                .then((response) => {\n                    return response.json() as Image\n                }).catch(this.handleError);\n        }\n    }\n\n    delete(image: Image): Promise<any> {\n        let headers = new Headers({\n            'Accept': 'application/json',\n            'Authorization': 'Basic ' + this.userService.getBasicAuth(),\n        });\n\n        return this.http.delete(this.settingsService.getApiurl() + '/image/' + image.id, { headers: headers })\n            .toPromise()\n            .then((response) => {\n                return response\n            }).catch(this.handleError);\n\n    }    \n\n    private handleError(error: any): Promise<any> {\n        return Promise.reject(error.message || error);\n    }\n  \n}\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/vice-registry/vice-webui/src/app/image.service.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"mat-card {\\n    width: 100%;\\n}\\n\\n.formcard {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n}\\n\\n.formcard > * {\\n  width: 100%;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/vice-registry/vice-webui/src/app/login.component.css\n// module id = ../../../../../src/app/login.component.css\n// module chunks = main","module.exports = \"<mat-grid-list cols=\\\"2\\\">\\n\\n    <mat-grid-tile>\\n        <mat-card>\\n            <mat-card-header>\\n                <mat-card-title>\\n                    <h1>Login</h1>\\n                </mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n                <form #loginForm=\\\"ngForm\\\">\\n                    <div class=\\\"formcard\\\">\\n                        <mat-form-field>\\n                            <input matInput name=\\\"username\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"loginCredentials.username\\\" required>\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <input matInput name=\\\"password\\\" placeholder=\\\"Enter your password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" [(ngModel)]=\\\"loginCredentials.password\\\"\\n                                required>\\n                            <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n                        </mat-form-field>\\n\\n                        <mat-checkbox name=\\\"save\\\" [(ngModel)]=\\\"storeCredentials\\\">Store credentials </mat-checkbox>\\n\\n                        <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"login()\\\">LOGIN</button>\\n                    </div>\\n                </form>\\n            </mat-card-content>\\n        </mat-card>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n        <mat-card>\\n            <mat-card-header>\\n                <mat-card-title>\\n                    <h1>Register</h1>\\n                </mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n                <form #registerForm=\\\"ngForm\\\">\\n                    <div class=\\\"formcard\\\">\\n                        <mat-form-field>\\n                            <input matInput name=\\\"username\\\" required placeholder=\\\"Username\\\" [(ngModel)]=\\\"registerUser.username\\\">\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <input matInput name=\\\"email\\\" required placeholder=\\\"e-Mail address\\\" [(ngModel)]=\\\"registerUser.email\\\">\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <input matInput name=\\\"fullname\\\" required placeholder=\\\"Full name\\\" [(ngModel)]=\\\"registerUser.fullname\\\">\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <input matInput name=\\\"password\\\" required placeholder=\\\"Enter your password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" [(ngModel)]=\\\"registerUser.password\\\">\\n                            <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n                        </mat-form-field>\\n                        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"register()\\\">CREATE ACCOUNT</button>\\n                    </div>\\n                </form>\\n            </mat-card-content>\\n        </mat-card>\\n    </mat-grid-tile>\\n\\n</mat-grid-list>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/vice-registry/vice-webui/src/app/login.component.html\n// module id = ../../../../../src/app/login.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from './api/model/User';\nimport { LoginService } from './login.service';\nimport { UserService } from './user.service';\nimport {MatSnackBar} from '@angular/material';\n\nexport class Credentials {\n  username: string;\n  password: string;\n}\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent {\n\n  hide = true;\n  storeCredentials = true;\n\n  loginCredentials: Credentials = new Credentials();\n  registerUser: User = {\n    username: \"\",\n    password: \"\",\n    email: \"\",\n    fullname: \"\"\n  };\n\n  constructor(\n    private loginService: LoginService,\n    private userService: UserService,\n    private router: Router, \n    public snackBar: MatSnackBar\n  ) {\n\n  }\n\n  login(): void {\n    var user = this.loginService.login(\n      this.loginCredentials.username,\n      this.loginCredentials.password)\n      .then(user => {\n        this.userService.change(user, this.storeCredentials);\n        this.router.navigate(['/']);\n      },\n      error => {\n        {\n          this.snackBar.open(\"Server Error: \" + error, \"OK\");\n        }\n      });\n  }\n\n  register(): void {\n    this.loginService.create(this.registerUser).\n      then(user => {\n        this.userService.change(user, true);\n        this.router.navigate(['/']);\n      },\n      error => {\n        {\n          this.snackBar.open(\"Server Error: \" + error, \"OK\");\n        }\n      });\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/vice-registry/vice-webui/src/app/login.component.ts","import { Injectable }    from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { User } from './api/model/User';\nimport { SettingsService } from './settings.service';\nimport { UserService } from './user.service';\n\nconst headerDict = {\n  'Content-Type': 'application/json',\n  'Accept': 'application/json',\n  'Access-Control-Allow-Headers': 'Content-Type',\n}\n\nconst headerObj = {                                                                                                                                                                                 \n  headers: new Headers(headerDict), \n};\n\n@Injectable()\nexport class LoginService {\n\n    constructor(private http: Http, private settingsService: SettingsService, private userService: UserService) { }\n    \n    login(username: string, password: string): Promise<User> {\n        var headers = new Headers({\n            'Accept': 'application/json',\n            'Authorization': 'Basic ' + btoa(username + ':' + password)\n        });\n        return this.http.get(this.settingsService.getApiurl()+'/user', {headers: headers})\n                .toPromise()\n                .then((response) => {\n                    return response.json() as User\n                }).catch(this.handleError);\n    }\n\n    create(user: User): Promise<User> {\n        var headers = new Headers({\n            'Accept': 'application/json',\n            'Content-type': 'application/json'\n        });\n        return this.http.post(this.settingsService.getApiurl()+'/user', JSON.stringify(user), {headers: headers})\n                .toPromise()\n                .then((response) => {\n                    return response.json() as User\n                }).catch(this.handleError);\n    }    \n    \n    private handleError(error: any): Promise<any> {\n        return Promise.reject(error.message || error);\n    }\n  \n}\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/vice-registry/vice-webui/src/app/login.service.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"mat-card {\\n    /*height: 90%;*/\\n    width: 100%;\\n}\\n\\nmat-card-content{\\n    height: 60px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/vice-registry/vice-webui/src/app/runtimestats.component.css\n// module id = ../../../../../src/app/runtimestats.component.css\n// module chunks = main","module.exports = \"<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"200px\\\">\\n\\n    <mat-grid-tile>\\n        <mat-card>\\n            <mat-card-header>\\n                <mat-card-title>\\n                    <h1>Import</h1>\\n                </mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n                <div>Worker: {{runtimestats?.importWorker || 0 }}</div>\\n                <div>Pending: {{runtimestats?.importsPending || 0 }}</div>\\n            </mat-card-content>\\n        </mat-card>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n        <mat-card>\\n            <mat-card-header>\\n                <mat-card-title>\\n                    <h1>Export</h1>\\n                </mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n                <div>Worker: {{runtimestats?.exportWorker || 0 }}</div>\\n                <div>Pending: {{runtimestats?.exportsPending || 0 }}</div>\\n            </mat-card-content>\\n        </mat-card>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n        <mat-card>\\n            <mat-card-header>\\n                <mat-card-title>\\n                    <h1>Store</h1>\\n                </mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n                <div>Worker: {{runtimestats?.storeWorker || 0 }}</div>\\n                <div>Pending: {{runtimestats?.storePending || 0 }}</div>\\n            </mat-card-content>\\n        </mat-card>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n        <mat-card>\\n            <mat-card-header>\\n                <mat-card-title>\\n                    <h1>Version</h1>\\n                </mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n                <div>Server: unknown</div>\\n                <div>Client: unknown</div>\\n            </mat-card-content>\\n        </mat-card>\\n    </mat-grid-tile>\\n</mat-grid-list>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/vice-registry/vice-webui/src/app/runtimestats.component.html\n// module id = ../../../../../src/app/runtimestats.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport {MatSnackBar} from '@angular/material';\nimport { RuntimeStats } from './api/model/RuntimeStats';\nimport { RuntimestatsService } from './runtimestats.service';\nimport 'rxjs/add/operator/toPromise';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/merge';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Component({\n    selector: 'runtimestats',\n    styleUrls: ['./runtimestats.component.css'],\n    templateUrl: './runtimestats.component.html',\n})\n\nexport class RuntimestatsComponent implements OnInit {\n\n    displayedColumns = ['id'];\n    runtimestats: RuntimeStats;\n\n    constructor(private runtimestatsService: RuntimestatsService, public snackBar: MatSnackBar) { }\n\n    ngOnInit(): void {\n        this.updateRuntimestats();\n    }\n\n    updateRuntimestats(): void{\n        this.runtimestatsService.get().then(\n            runtimestats => this.runtimestats = runtimestats,\n            error => {{\n                this.snackBar.open(\"Server Error: \" + error, \"OK\");\n            }}\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/vice-registry/vice-webui/src/app/runtimestats.component.ts","import { Injectable }    from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { RuntimeStats } from './api/model/RuntimeStats';\nimport { SettingsService } from './settings.service';\nimport { UserService } from './user.service';\n\nconst headerDict = {\n  'Content-Type': 'application/json',\n  'Accept': 'application/json',\n  'Access-Control-Allow-Headers': 'Content-Type',\n}\n\nconst headerObj = {                                                                                                                                                                                 \n  headers: new Headers(headerDict), \n};\n\n@Injectable()\nexport class RuntimestatsService {\n\n    constructor(private http: Http, private settingsService: SettingsService, private userService: UserService) { }\n    \n    get(): Promise<RuntimeStats> {\n        let headers = new Headers({\n            'Accept': 'application/json',\n            'Authorization': 'Basic ' + this.userService.getBasicAuth()\n        });        \n        return this.http.get(this.settingsService.getApiurl()+'/runtimestats', {headers: headers})\n                .toPromise()\n                .then((response) => {\n                    return response.json() as RuntimeStats\n                }).catch(this.handleError);\n    }\n    \n    private handleError(error: any): Promise<any> {\n        return Promise.reject(error.message || error);\n    }\n  \n}\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/vice-registry/vice-webui/src/app/runtimestats.service.ts","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { User } from './api/model/User';\n\n@Injectable()\nexport class SettingsService {\n\n  private apiurlSource = new Subject<string>();\n  apiurl$ = this.apiurlSource.asObservable();\n\n  // Service message commands\n  changeApiurl(apiurl: string) {\n    this.apiurlSource.next(apiurl);\n    localStorage.setItem('apiurl', apiurl)\n  }\n\n  getApiurl(): string {\n    let data = localStorage.getItem('apiurl');\n    if (!data) {\n      return undefined;\n    }\n    return data;\n  }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/vice-registry/vice-webui/src/app/settings.service.ts","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { User } from './api/model/User';\n\n@Injectable()\nexport class UserService {\n\n  private userchangeSource = new Subject<User>();\n  userchange$ = this.userchangeSource.asObservable();\n\n  // Service message commands\n  change(user: User, store: boolean = false) {\n    this.userchangeSource.next(user);\n    if (store) {\n      localStorage.setItem('user', JSON.stringify(user))\n    }\n  }\n\n  forget() {\n    localStorage.removeItem('user');\n  }\n\n  remember(): User {\n    let data = JSON.parse(localStorage.getItem('user'));\n    if (!data) {\n      var user: User = {\n        email: \"\",\n        username: \"\",\n        password: \"\",\n        fullname: \"\",\n        id: \"\"\n      };            \n      return user;\n    }\n\n    var user: User = {\n      email: data['email'],\n      username: data['username'],\n      password: data['password'],\n      fullname: data['fullname'],\n      id: data['id']\n    };\n\n    return user;\n  }\n\n  getBasicAuth(): string {\n    let user = this.remember();\n    return btoa(user.username + ':' + user.password);\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/vice-registry/vice-webui/src/app/user.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/vice-registry/vice-webui/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/vice-registry/vice-webui/src/main.ts"],"sourceRoot":"webpack:///"}